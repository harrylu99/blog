(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{657:function(e,t,a){"use strict";a.r(t);var s=a(17),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"foreword"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foreword"}},[e._v("#")]),e._v(" Foreword")]),e._v(" "),a("p",[e._v("We will talk about the structure and workflow of "),a("code",[e._v("Update")]),e._v(" in this article.")]),e._v(" "),a("blockquote",[a("p",[e._v("You can think "),a("code",[e._v("Update")]),e._v(" as a "),a("code",[e._v("commit")]),e._v(" in the "),a("code",[e._v("mental model")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"type-of-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-of-update"}},[e._v("#")]),e._v(" Type of Update")]),e._v(" "),a("p",[e._v("We could group the "),a("code",[e._v("update")]),e._v(" by the way how it trigger updates.")]),e._v(" "),a("ul",[a("li",[e._v("ReactDOM.render -- HostRoot")]),e._v(" "),a("li",[e._v("this.setState -- ClassComponent")]),e._v(" "),a("li",[e._v("this.forceUpdate -- ClassComponent")]),e._v(" "),a("li",[e._v("useState -- FunctionComponent")]),e._v(" "),a("li",[e._v("useRender -- FunctionComponent")])]),e._v(" "),a("p",[e._v("We could find these three type of components could trigger the update, includings "),a("code",[e._v("HostRoot")]),e._v(", "),a("code",[e._v("ClassComponent")]),e._v(" and "),a("code",[e._v("FunctionComponent")]),e._v(".")]),e._v(" "),a("p",[e._v("Based on the different type of the component, "),a("code",[e._v("React")]),e._v(" has two "),a("code",[e._v("Update")]),e._v(" structure, "),a("code",[e._v("HostRoot")]),e._v(" and "),a("code",[e._v("ClassComponent")]),e._v(" share the same "),a("code",[e._v("Update")]),e._v(" structure and "),a("code",[e._v("FucntionComponent")]),e._v(" has another "),a("code",[e._v("Update")]),e._v(" structure.")]),e._v(" "),a("p",[e._v("Even those two "),a("code",[e._v("Update")]),e._v(" have different srructure, but their workflow are similar.")]),e._v(" "),a("p",[e._v("We will talk about the "),a("code",[e._v("Update")]),e._v(" for "),a("code",[e._v("HostRoot")]),e._v(" and "),a("code",[e._v("ClassComponent")]),e._v(" in this ariticle, will dicuss about the "),a("code",[e._v("Update")]),e._v(" of "),a("code",[e._v("FunctionComponent")]),e._v(" in the future section "),a("code",[e._v("Hooks")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"structure-of-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structure-of-update"}},[e._v("#")]),e._v(" Structure of Update")]),e._v(" "),a("p",[a("code",[e._v("ClassComponent")]),e._v(" and "),a("code",[e._v("HostRoot")]),e._v(" share the same "),a("code",[e._v("Update structure")]),e._v(".")]),e._v(" "),a("p",[e._v("The corresponding structure looks like")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("update")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Update"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  eventTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  suspenseConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" UpdateState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("payload")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("callback")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("next")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("blockquote",[a("p",[a("code",[e._v("update")]),e._v(" return by "),a("code",[e._v("createUpdate")]),e._v(", "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactUpdateQueue.old.js#L189",target:"_blank",rel:"noopener noreferrer"}},[e._v("you can check the source code of "),a("code",[e._v("createUpdate")]),e._v(" here."),a("OutboundLink")],1)])]),e._v(" "),a("ul",[a("li",[e._v("eventTime: time get by "),a("code",[e._v("performance.now()")]),e._v(". This will rebuild soon, so we do not need get deep into it.")]),e._v(" "),a("li",[e._v("lane: the "),a("code",[e._v("priority")]),e._v(" of the tasks.")]),e._v(" "),a("li",[e._v("suspenseConfig: "),a("code",[e._v("Suspense")]),e._v(" related.")]),e._v(" "),a("li",[e._v("tag: types of update, includings "),a("code",[e._v("UpdateState")]),e._v(", "),a("code",[e._v("ReplaceState")]),e._v(", "),a("code",[e._v("ForceUpdate")]),e._v(" and "),a("code",[e._v("CaptureUpdate")]),e._v(".")]),e._v(" "),a("li",[e._v("payload: updated mount data, different type of components mount different data. As for "),a("code",[e._v("ClassComponent")]),e._v(", "),a("code",[e._v("payload")]),e._v(" is the first parameter of "),a("code",[e._v("this.setState")]),e._v(". As for "),a("code",[e._v("HostRoot")]),e._v(", "),a("code",[e._v("payload")]),e._v(" is the first parameter of "),a("code",[e._v("ReactDOM.render")]),e._v(".")]),e._v(" "),a("li",[e._v("callback: the callback fucntion of the update. This is the "),a("code",[e._v("callback fucntion")]),e._v(" we have mentioned in the previous article "),a("code",[e._v("commit - layout")]),e._v(".")]),e._v(" "),a("li",[e._v("next: generate a chain with other "),a("code",[e._v("Update")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"connection-between-update-and-fiber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connection-between-update-and-fiber"}},[e._v("#")]),e._v(" Connection between Update and Fiber")]),e._v(" "),a("p",[e._v("We find out there is a field "),a("code",[e._v("next")]),e._v(" connect with other "),a("code",[e._v("Update")]),e._v(" exsiting on the "),a("code",[e._v("Update")]),e._v(". Does it related with another "),a("code",[e._v("Fiber")]),e._v(" in "),a("code",[e._v("React")]),e._v(" ? The answer is yes.")]),e._v(" "),a("p",[e._v("From the previous section "),a("code",[e._v("Double Buffer")]),e._v(", we know that there are maximun of two "),a("code",[e._v("Fiber tree")]),e._v(" existing in the page. One is the "),a("code",[e._v("current Fiber tree")]),e._v(" and another is "),a("code",[e._v("workInProgress Fiber tree")]),e._v(". Just like how "),a("code",[e._v("Fiber Node")]),e._v(" make up the "),a("code",[e._v("Fiber tree")]),e._v(", the multiple "),a("code",[e._v("Update")]),e._v(" in the "),a("code",[e._v("Fiber treee")]),e._v(" will be inclued in the "),a("code",[e._v("fiber.updateQueue")]),e._v(".")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[e._v("You might think about why there could be multiple "),a("code",[e._v("Update")]),e._v(" on a "),a("code",[e._v("Fiber node")]),e._v(".")]),e._v(" "),a("p",[e._v("Check this example")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("onClick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[a("code",[e._v("this.onClick")]),e._v(" triggers in the first "),a("code",[e._v("ClassComponent")]),e._v(" and "),a("code",[e._v("this.setState")]),e._v(" called twice inside the funtion which means there are two "),a("code",[e._v("Update")]),e._v(" happened in the "),a("code",[e._v("fiber")]),e._v(".")])]),a("p",[e._v("There could be maximum two "),a("code",[e._v("updateQueue")]),e._v(" exsiting on the "),a("code",[e._v("Fiber node")]),e._v(". Which are the "),a("code",[e._v("current updateQueue")]),e._v(" saved by the "),a("code",[e._v("current fiber")]),e._v(" and the "),a("code",[e._v("workInProgress updateQueue")]),e._v(" which saved by the "),a("code",[e._v("workInProgress fiber")]),e._v(".")]),e._v(" "),a("h1",{attrs:{id:"updatequeue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatequeue"}},[e._v("#")]),e._v(" updateQueue")]),e._v(" "),a("p",[e._v("There are three types of "),a("code",[e._v("updateQueue")]),e._v(", we have talked about the type used for "),a("code",[e._v("HostComponent")]),e._v(" in thr previous "),a("code",[e._v("completeWork")]),e._v(" article.")]),e._v(" "),a("p",[e._v("Other two types are corresponding of the "),a("code",[e._v("Update")]),e._v(" types.")]),e._v(" "),a("p",[e._v("The structure of "),a("code",[e._v("UpdateQueue")]),e._v(" for "),a("code",[e._v("ClassComponent")]),e._v(" and "),a("code",[e._v("HostRoot")]),e._v(" looks like")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("queue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" UpdateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("State"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("baseState")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("memoizedState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("firstBaseUpdate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("lastBaseUpdate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("shared")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("pending")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("effects")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("blockquote",[a("p",[a("code",[e._v("UpdateQueue")]),e._v(" return by "),a("code",[e._v("initializeUpdateQueue")]),e._v(", "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactUpdateQueue.new.js#L157",target:"_blank",rel:"noopener noreferrer"}},[e._v("You can check the source code of "),a("code",[e._v("initializeUpdateQueue")]),e._v(" from here."),a("OutboundLink")],1)])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("baseState: the "),a("code",[e._v("state")]),e._v(" of the before updated "),a("code",[e._v("Fiber node")]),e._v(", and "),a("code",[e._v("Update")]),e._v(" calculate the new "),a("code",[e._v("state")]),e._v(" based on this.")]),e._v(" "),a("blockquote",[a("p",[e._v("It looks like the "),a("code",[e._v("master")]),e._v(" branch from the mental model.")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("firstBaseUpdate")]),e._v(" and "),a("code",[e._v("lastBaseUpdate")]),e._v(": the "),a("code",[e._v("Update")]),e._v(" saved before the "),a("code",[e._v("Fiber node")]),e._v(" updated. It saved as a chain with the chain header named "),a("code",[e._v("firstBaseUpdate")]),e._v(" and the end of the chian named "),a("code",[e._v("lastBaseUpdate")]),e._v(".")]),e._v(" "),a("p",[e._v("The reason why we got some "),a("code",[e._v("Update")]),e._v(" in the unupdated "),a("code",[e._v("Fiber node")]),e._v(", is because some of the "),a("code",[e._v("low priority Update")]),e._v(" was skipped in the last time update.")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("baseUpdate")]),e._v(" like the "),a("code",[e._v("commit")]),e._v(" of the "),a("code",[e._v("git rebase")]),e._v(" from the mental model.")])])]),e._v(" "),a("li",[a("p",[e._v("shared.pending: When trigger the updates, "),a("code",[e._v("Update")]),e._v(" will save in the "),a("code",[e._v("shared.pending")]),e._v(" as an one-way cyclic chain table. This chain will be clipped and connected after "),a("code",[e._v("lastBaseUpdate")]),e._v(" when the "),a("code",[e._v("Update")]),e._v(" start caculating "),a("code",[e._v("state")]),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("effects: save "),a("code",[e._v("Update")]),e._v(" which is "),a("code",[e._v("update.callback !== null")]),e._v(".")])])]),e._v(" "),a("h2",{attrs:{id:"demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[e._v("#")]),e._v(" Demo")]),e._v(" "),a("p",[e._v("For example, there is a "),a("code",[e._v("fiber")]),e._v(" just finshed "),a("code",[e._v("commit stage")]),e._v(" and rendered.")]),e._v(" "),a("p",[e._v("There are two "),a("code",[e._v("Update")]),e._v(" did not processed in the last "),a("code",[e._v("render")]),e._v(" because of the "),a("code",[e._v("low priority")]),e._v(", they will be the "),a("code",[e._v("baseUpdate")]),e._v(" of next turn updating.")]),e._v(" "),a("p",[e._v("We name these "),a("code",[e._v("u1")]),e._v(" and "),a("code",[e._v("u2")]),e._v(", which "),a("code",[e._v("u1.next === u2")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("updateQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("firstBaseUpdate "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" u1\nfiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("updateQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("lastBaseUpdate "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" u2\nu1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" u2\n")])])]),a("p",[e._v("If we use "),a("code",[e._v("--\x3e")]),e._v(" presents the direction of the chain.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("fiber.updateQueue.baseUpdate: u1 --\x3e u2\n")])])]),a("p",[e._v("If we trigger update twice on "),a("code",[e._v("fiber")]),e._v(", there will be two new "),a("code",[e._v("Update")]),e._v(" created, we call them "),a("code",[e._v("u3")]),e._v(" and "),a("code",[e._v("u4")]),e._v(".")]),e._v(" "),a("p",[e._v("Each "),a("code",[e._v("update")]),e._v(" will insert to the "),a("code",[e._v("updateQueue")]),e._v(" queue by "),a("code",[e._v("enqueneUpdate")]),e._v(" method.")]),e._v(" "),a("p",[e._v("After inserting "),a("code",[e._v("u3")])]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("updateQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("shared"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("pending "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" u3\nu3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" u3\n")])])]),a("p",[e._v("the circle chain relationship of "),a("code",[e._v("shared,pending")]),e._v(" looks like")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("fiber.updateQueue.shared.pending:   u3 ─────┐\n                                     ^      |\n                                     └──────┘\n")])])]),a("p",[e._v("after insert "),a("code",[e._v("u4")])]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("updateQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("shared"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("pending "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" u4\nu4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" u3\nu3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" u4\n")])])]),a("p",[e._v("the circle chain look like")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("fiber.updateQueue.shared.pending:   u4 ──> u3\n                                     ^      |\n                                     └──────┘\n")])])]),a("p",[a("code",[e._v("shared.pending")]),e._v(" will promise that it points to the last insert "),a("code",[e._v("update")]),e._v(", "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactUpdateQueue.new.js#L208",target:"_blank",rel:"noopener noreferrer"}},[e._v("You can check the source code of "),a("code",[e._v("enqueueUpdate")]),e._v(" here."),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("After update, it will goes to "),a("code",[e._v("render")]),e._v(".")]),e._v(" "),a("p",[e._v("Right now, the circle chain of "),a("code",[e._v("shared.pending")]),e._v(" is clipped and joined behind the "),a("code",[e._v("updateQueue.lastBaseUpdate")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("fiber.updateQueue.baseUpdate: u1 --\x3e u2 --\x3e u3 --\x3e u4\n")])])]),a("p",[e._v("Following by traverse the "),a("code",[e._v("updateQueue.baseUpdate")]),e._v(" chain table. Use "),a("code",[e._v("fiber,updateQueue.baseState")]),e._v(" as the "),a("code",[e._v("initialization state")]),e._v(", traversal and caculate the the "),a("code",[e._v("state")]),e._v(" created by each "),a("code",[e._v("Update")]),e._v(".")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Update")]),e._v(" with "),a("code",[e._v("low priority")]),e._v(" will be skipped when traversalling.")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("update")]),e._v(" of the "),a("code",[e._v("render")]),e._v(" finished by "),a("code",[e._v("processUpdaetQueue")]),e._v(", "),a("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactUpdateQueue.new.js#L405",target:"_blank",rel:"noopener noreferrer"}},[e._v("you can check the source code of the "),a("code",[e._v("processUpdateQueue")]),e._v(" from here."),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("The changes of the "),a("code",[e._v("state")]),e._v(" will have different "),a("code",[e._v("JSX object")]),e._v(" when it rendering, have "),a("code",[e._v("effectTag")]),e._v(" by "),a("code",[e._v("Diff algorithem")]),e._v(" and render on the page during "),a("code",[e._v("commit")]),e._v(".")]),e._v(" "),a("p",[e._v("After rendering, the "),a("code",[e._v("workInProgress Fiber tree")]),e._v(" becomes "),a("code",[e._v("current Fiber tree")]),e._v(" and that is the end of this updating process.")])])}),[],!1,null,null,null);t.default=o.exports}}]);