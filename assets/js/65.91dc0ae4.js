(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{652:function(e,t,o){"use strict";o.r(t);var v=o(17),r=Object(v.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Before we jump into the source code, we should start from the "),o("code",[e._v("mental model")]),e._v(" of the "),o("code",[e._v("updating")]),e._v(".")]),e._v(" "),o("h2",{attrs:{id:"synchronous-update-of-react"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#synchronous-update-of-react"}},[e._v("#")]),e._v(" Synchronous Update of React")]),e._v(" "),o("p",[e._v("We could understanding "),o("code",[e._v("update")]),e._v(" as the "),o("code",[e._v("code version control")]),e._v(".")]),e._v(" "),o("p",[e._v("Before we have "),o("code",[e._v("code version control")]),e._v(", we added the functions one by one into our code, everything looks perfect untill we meet a "),o("code",[e._v("bug")]),e._v(".")]),e._v(" "),o("p",[e._v("For solving this, we have to push our previous changes before we start fix it.")]),e._v(" "),o("p",[e._v("In "),o("code",[e._v("React")]),e._v(", the apps created by "),o("code",[e._v("ReactDOM.render")]),e._v(" are using this "),o("code",[e._v("updating")]),e._v(" rules.")]),e._v(" "),o("p",[e._v("Which means, there is not "),o("code",[e._v("priority")]),e._v(" in the "),o("code",[e._v("updating")]),e._v(", even the "),o("code",[e._v("bug")]),e._v(" with "),o("code",[e._v("high priority")]),e._v(" needs to fix after other "),o("code",[e._v("update")]),e._v(".")]),e._v(" "),o("h2",{attrs:{id:"concurrent-update"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#concurrent-update"}},[e._v("#")]),e._v(" Concurrent Update")]),e._v(" "),o("p",[e._v("When we got the "),o("code",[e._v("code version control")]),e._v(", we could temporary "),o("code",[e._v("stash")]),e._v(" the current changes before we fix the "),o("code",[e._v("bug")]),e._v(".")]),e._v(" "),o("p",[e._v("After the "),o("code",[e._v("bug")]),e._v(" fixed, we could use "),o("code",[e._v("git rebase")]),e._v(" rebase with the "),o("code",[e._v("develop branch")]),e._v(", then you can keep going with the tasks.")]),e._v(" "),o("p",[e._v("In "),o("code",[e._v("React")]),e._v(", ths apps created by "),o("code",[e._v("ReactDOM.createBlockingRoot")]),e._v(" or "),o("code",[e._v("ReactDOM.createRoot")]),e._v(" are using "),o("code",[e._v("concurrent update")]),e._v(".")]),e._v(" "),o("p",[o("code",[e._v("high priority update")]),e._v(" will stop the "),o("code",[e._v("low priority update")]),e._v(", which means it needs to finished the whole process from "),o("code",[e._v("render")]),e._v(" to "),o("code",[e._v("commit")]),e._v(", after that, those "),o("code",[e._v("low priority")]),e._v(" updates are going to "),o("code",[e._v("reupdate")]),e._v(" based on the result of the "),o("code",[e._v("high priority update")]),e._v(".")]),e._v(" "),o("p",[e._v("We are going to talk about the implement of the "),o("code",[e._v("concurrent update")]),e._v(" in the next aritlce.")])])}),[],!1,null,null,null);t.default=r.exports}}]);