(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{578:function(e,t,s){e.exports=s.p+"assets/img/diffSingle.cee80aa6.png"},634:function(e,t,s){"use strict";s.r(t);var n=s(17),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"single-node"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#single-node"}},[e._v("#")]),e._v(" Single Node")]),e._v(" "),n("p",[e._v("As for "),n("code",[e._v("single node")]),e._v(", like "),n("code",[e._v("object")]),e._v(", it will call the "),n("code",[e._v("reconcileSingleElement")]),e._v(".")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactChildFiber.new.js#L1141",target:"_blank",rel:"noopener noreferrer"}},[e._v("You can check the source code of "),n("code",[e._v("reconcileSingleElement")]),e._v(" from here."),n("OutboundLink")],1)]),e._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" isObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("typeof")]),e._v(" newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'object'")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!==")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("isObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// object typeï¼Œcould be REACT_ELEMENT_TYPE or REACT_PORTAL_TYPE")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("switch")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("$$"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("case")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("REACT_ELEMENT_TYPE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// call reconcileSingleElement")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("p",[e._v("This logic of this function should be look like")]),e._v(" "),n("p",[n("img",{attrs:{src:s(578),alt:"Logic of the function "}})]),e._v(" "),n("p",[e._v("Let's check how to determine if a DOM node is reusable is implemented in the second step.")]),e._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("reconcileSingleElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("returnFiber")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("currentFirstChild")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("element")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" ReactElement")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" key "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" element"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("key\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" child "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" currentFirstChild\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// If the corresponding DOM node exsit")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("child "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!==")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Judge the key is same")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// If the key is same, check the type next")]),e._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("switch")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("elementType "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" element"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// same type means it could be reused")]),e._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// return the fiber")]),e._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" existing\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// jump out the switch if type is not the same")]),e._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("break")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// has the same key but has differnt type")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// mark fiber and its sibling node as delete")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("deleteRemainingChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("break")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// key is not the same, mark fiber as delete")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("deleteChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    child "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sibling\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// create the new Fiber and retuen...")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("p",[e._v("From the code we could find out that, "),n("code",[e._v("React")]),e._v(" judge the "),n("code",[e._v("key")]),e._v(" first, followed by judge the "),n("code",[e._v("type")]),e._v(", "),n("code",[e._v("DOM node")]),e._v(" could be resued only when both "),n("code",[e._v("key")]),e._v(" and "),n("code",[e._v("type")]),e._v(" are the same.")]),e._v(" "),n("p",[e._v("When "),n("code",[e._v("child !== null")]),e._v(", "),n("code",[e._v("key")]),e._v(" is same and "),n("code",[e._v("type")]),e._v(" is not the same, "),n("code",[e._v("deleteRemainingChildren")]),e._v(" will be excuted, "),n("code",[e._v("child")]),e._v(" and its sibling "),n("code",[e._v("fiber")]),e._v(" will be marked delete.")]),e._v(" "),n("p",[e._v("When "),n("code",[e._v("child !== null")]),e._v(" and "),n("code",[e._v("key")]),e._v(" is not the same, only "),n("code",[e._v("child")]),e._v(" will be marked delete.")]),e._v(" "),n("p",[e._v("Think about the example below")]),e._v(" "),n("p",[e._v("When we have three "),n("code",[e._v("li")]),e._v(" on the page and we want to delete all of these and insert a "),n("code",[e._v("p")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// current page\nul > li *3\n\n// new page\nul > p\n")])])]),n("p",[e._v("Since only one "),n("code",[e._v("p")]),e._v(" needs to be updated, it belongs to the single node diff and will follow the logic we have talked about in the article.")]),e._v(" "),n("p",[e._v("The three "),n("code",[e._v("fiber")]),e._v(" traversaled by "),n("code",[e._v("reconcileSingleElement")]),e._v(" will trying to find if the "),n("code",[e._v("p")]),e._v(" could reuse any "),n("code",[e._v("DOM")]),e._v(" from the previous "),n("code",[e._v("fiber")]),e._v(".")]),e._v(" "),n("p",[e._v("When the "),n("code",[e._v("key")]),e._v(" is same but the "),n("code",[e._v("type")]),e._v(" is different, which mean we have find the corresponding "),n("code",[e._v("fiber")]),e._v(" of the "),n("code",[e._v("p")]),e._v(", but they are not the same type, cannot be reused. So, delete marked.")]),e._v(" "),n("p",[e._v("When the "),n("code",[e._v("key")]),e._v(" is not the same, which mean the "),n("code",[e._v("fiber")]),e._v(" cannot be reused for the "),n("code",[e._v("p")]),e._v(", in this case, only "),n("code",[e._v("fiber")]),e._v(" will be marked delete.")]),e._v(" "),n("h2",{attrs:{id:"practice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#practice"}},[e._v("#")]),e._v(" Practice")]),e._v(" "),n("p",[e._v("Please determine whether the "),n("code",[e._v("DOM")]),e._v(" elements corresponding to the following JSX objects can be reused.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// 1. before update\n<div>hello world</div>\n// after update\n<p>hello world</p>\n\n// 2. before update\n<div key="hello">hello world</div>\n// after update\n<div key="world">hello world</div>\n\n// 3. before update\n<div key="hello">hello world</div>\n// after update\n<p key="world">hello world</p>\n\n// 4. before update\n<div key="hello">hello world</div>\n// after update\n<div key="hello">hello react</div>\n')])])]),n("details",{staticClass:"custom-block details"},[n("summary",[e._v("Check the answer")]),e._v(" "),n("ol",[n("li",[n("code",[e._v("key prop")]),e._v(" was not setted, so default "),n("code",[e._v("key == null")]),e._v(". "),n("code",[e._v("Key")]),e._v(" are the same. Type is "),n("code",[e._v("div")]),e._v(" before update and it changed to "),n("code",[e._v("p")]),e._v(" after update, different type cannot be reused.")]),e._v(" "),n("li",[n("code",[e._v("key")]),e._v(" is not the same, so it cannot be resued.")]),e._v(" "),n("li",[n("code",[e._v("key")]),e._v(" is not the same, so it cannot be resued.")]),e._v(" "),n("li",[e._v("Both "),n("code",[e._v("key")]),e._v(" and "),n("code",[e._v("type")]),e._v(" are not changed, so it could be resued.")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);