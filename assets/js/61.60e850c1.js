(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{643:function(t,e,s){"use strict";s.r(e);var n=s(17),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"foreword"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreword"}},[t._v("#")]),t._v(" Foreword")]),t._v(" "),s("p",[t._v("We have talked about the "),s("code",[t._v("child Fiber node")]),t._v(" will be created after component executed "),s("code",[t._v("beginWork")]),t._v(", and "),s("code",[t._v("effectTag")]),t._v(" might exsiting in the node.")]),t._v(" "),s("p",[t._v("We will talk about "),s("code",[t._v("completeWork")]),t._v(" in this section, "),s("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberCompleteWork.new.js#L673",target:"_blank",rel:"noopener noreferrer"}},[t._v("you can find the definition of "),s("code",[t._v("completeWork")]),t._v(" from here"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"process-overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#process-overview"}},[t._v("#")]),t._v(" Process Overview")]),t._v(" "),s("p",[t._v("Similar to "),s("code",[t._v("beginWork")]),t._v(", "),s("code",[t._v("completeWork")]),t._v(" also calls different processing logic for different "),s("code",[t._v("fiber.tag")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("completeWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("current")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("workInProgress")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("renderLanes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newProps "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("IndeterminateComponent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("LazyComponent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("SimpleMemoComponent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("FunctionComponent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ForwardRef")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Fragment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Mode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Profiler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ContextConsumer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("MemoComponent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ClassComponent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("HostRoot")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostContainer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("HostComponent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),s("p",[t._v("We focus on the page rendering of the necessary "),s("code",[t._v("HostComponent")]),t._v(" (that is, the native "),s("code",[t._v("DOM components")]),t._v(" corresponding to the "),s("code",[t._v("Fiber node")]),t._v("), the handling of other types of "),s("code",[t._v("Fiber")]),t._v(" left in the implementation of specific functions to explain.")]),t._v(" "),s("h2",{attrs:{id:"hostcomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hostcomponent"}},[t._v("#")]),t._v(" HostComponent")]),t._v(" "),s("p",[t._v("As with "),s("code",[t._v("beginWork")]),t._v(", we determine whether it is a "),s("code",[t._v("mount")]),t._v(" or an "),s("code",[t._v("update")]),t._v(" based on "),s("code",[t._v("current === null ?")]),t._v(".")]),t._v(" "),s("p",[t._v("Also for "),s("code",[t._v("HostComponent")]),t._v(", when determining "),s("code",[t._v("update")]),t._v(" we also need to consider "),s("code",[t._v("workInProgress.stateNode ! = null ?")]),t._v(" (that is, whether the "),s("code",[t._v("Fiber node")]),t._v(" exists corresponding "),s("code",[t._v("DOM node")]),t._v(")")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("HostComponent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("popHostContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rootContainerInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRootHostContainer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mount")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" update")]),t._v(" "),s("p",[t._v("When "),s("code",[t._v("update")]),t._v(", "),s("code",[t._v("Fiber node")]),t._v(" already exist corresponding "),s("code",[t._v("DOM node")]),t._v(", so there is no need to generate "),s("code",[t._v("DOM node")]),t._v(". What we need to do is mainly to handle the "),s("code",[t._v("props")]),t._v(", such as")]),t._v(" "),s("ul",[s("li",[t._v("Registration of callback functions such as "),s("code",[t._v("onClick")]),t._v(", "),s("code",[t._v("onChange")]),t._v(", etc.")]),t._v(" "),s("li",[s("code",[t._v("style prop")])]),t._v(" "),s("li",[s("code",[t._v("DANGEROUSLY_SET_INNER_HTML prop")])]),t._v(" "),s("li",[s("code",[t._v("children prop")])])]),t._v(" "),s("p",[t._v("We could remove some functions that do not need attention at the moment, like "),s("code",[t._v("ref")]),t._v(". You can see that the main logic is to call the "),s("code",[t._v("updateHostComponent")]),t._v(" method.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    newProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rootContainerInstance\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberCompleteWork.new.js#L225",target:"_blank",rel:"noopener noreferrer"}},[t._v("You can find the difination of "),s("code",[t._v("updateHostComponent")]),t._v(" method here"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("In the "),s("code",[t._v("updateHostComponent")]),t._v(", the processed "),s("code",[t._v("props")]),t._v(" are assigned to "),s("code",[t._v("workInProgress.updateQueue")]),t._v(" and will be rendered on the page during the "),s("code",[t._v("commit")]),t._v(" phase.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updatePayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Where "),s("code",[t._v("updatePayload")]),t._v(" is in array form and the value of its even index is the changed "),s("code",[t._v("prop key")]),t._v(", and the value of the odd index is the changed "),s("code",[t._v("prop value")]),t._v(".")]),t._v(" "),s("p",[t._v("We will talk about the specific rendering process in the future section.")]),t._v(" "),s("h2",{attrs:{id:"mount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mount"}},[t._v("#")]),t._v(" mount")]),t._v(" "),s("p",[t._v("Again, we omitted the irrelevant logic. The main logic at mount time consists of three.")]),t._v(" "),s("ul",[s("li",[t._v("Generating the corresponding "),s("code",[t._v("DOM node")]),t._v(" for the "),s("code",[t._v("Fiber node")]),t._v(".")]),t._v(" "),s("li",[t._v("Inserting the descendant "),s("code",[t._v("DOM node")]),t._v(" into the newly generated "),s("code",[t._v("DOM node")]),t._v(".")]),t._v(" "),s("li",[t._v("The process of handling "),s("code",[t._v("props")]),t._v(" is similar to "),s("code",[t._v("updateHostComponent")]),t._v(" in the "),s("code",[t._v("update")]),t._v(" logic.")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mount")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...server-side rendering-related logic")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" currentHostContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHostContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create DOM node for fiber")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  newProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  rootContainerInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  currentHostContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bring the descendant DOM node to the exsiting DOM node")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendAllChildren")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sign DOM Node to fiber.stateNode")]),t._v("\nworkInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// similar ti the process of updateHostComponent in update")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finalizeInitialChildren")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    newProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rootContainerInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    currentHostContext\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Remember what we said in the last section, when "),s("code",[t._v("mount")]),t._v(", only the "),s("code",[t._v("Placement effectTag")]),t._v(" will exist in "),s("code",[t._v("rootFiber")]),t._v(", so how does the "),s("code",[t._v("commit")]),t._v(" stage insert the whole "),s("code",[t._v("DOM tree")]),t._v(" into the page in one time?")]),t._v(" "),s("p",[t._v("The reason lies in the "),s("code",[t._v("appendAllChildren")]),t._v(" method in "),s("code",[t._v("completeWork")]),t._v(".")]),t._v(" "),s("p",[t._v("Since "),s("code",[t._v("completeWork")]),t._v(' is a function called at the "return" stage, each time when '),s("code",[t._v("appendAllChildren")]),t._v(" is called, the generated children "),s("code",[t._v("DOM node")]),t._v(" will be inserted under the currently generated "),s("code",[t._v("DOM node")]),t._v('. So when "return" to '),s("code",[t._v("rootFiber")]),t._v(", we already have a built off-screen "),s("code",[t._v("DOM tree")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"effectlist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#effectlist"}},[t._v("#")]),t._v(" effectList")]),t._v(" "),s("p",[t._v("Most of the work in the "),s("code",[t._v("render")]),t._v(" phase is now complete.")]),t._v(" "),s("p",[t._v("We do have one more question needs to be answer. As the basis of "),s("code",[t._v("DOM")]),t._v(" operation, the "),s("code",[t._v("commit")]),t._v(" phase needs to find all the "),s("code",[t._v("Fiber node")]),t._v(" with "),s("code",[t._v("effectTag")]),t._v(" and execute the corresponding "),s("code",[t._v("effectTag")]),t._v(" operations in turn. Do we need to traverse the "),s("code",[t._v("Fiber tree")]),t._v(" again in the "),s("code",[t._v("commit")]),t._v(" phase to find the "),s("code",[t._v("Fiber node")]),t._v(" with "),s("code",[t._v("effectTag ! == null")]),t._v("?")]),t._v(" "),s("p",[t._v("Obviously, this is very inefficient.")]),t._v(" "),s("p",[t._v("To solve this problem, in the upper-level function "),s("code",[t._v("completeUnitOfWork")]),t._v(" of "),s("code",[t._v("completeWork")]),t._v(", each "),s("code",[t._v("Fiber node")]),t._v(" that has finished executing "),s("code",[t._v("completeWork")]),t._v(" and has an "),s("code",[t._v("effectTag")]),t._v(" is saved in a one-way chain called "),s("code",[t._v("effectList")]),t._v(".")]),t._v(" "),s("p",[t._v("The first "),s("code",[t._v("Fiber node")]),t._v(" in the "),s("code",[t._v("effectList")]),t._v(" is stored in "),s("code",[t._v("fiber.firstEffect")]),t._v(" and the last element is stored in "),s("code",[t._v("fiber.lastEffect")]),t._v(".")]),t._v(" "),s("p",[t._v("Similar to "),s("code",[t._v("appendAllChildren")]),t._v(", all "),s("code",[t._v("Fiber nodes")]),t._v(" with "),s("code",[t._v("effectTag")]),t._v(" are appended to the "),s("code",[t._v("effectList")]),t._v(' in the "return" phase, resulting in a unidirectional chain starting from '),s("code",[t._v("rootFiber.firstEffect")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("                       nextEffect         nextEffect\nrootFiber.firstEffect -----------\x3e fiber -----------\x3e fiber\n")])])]),s("p",[t._v("As the result, you can execute all the "),s("code",[t._v("effects")]),t._v(" in the "),s("code",[t._v("commit")]),t._v(" phase by just iterating through the "),s("code",[t._v("effectList")]),t._v(".")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberWorkLoop.new.js#L1744",target:"_blank",rel:"noopener noreferrer"}},[t._v("You can see the logic of this code here"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Dan Abramov offered an analogy for an effects list. He likes to think of it as a Christmas tree, with “Christmas lights” binding all effectful nodes together.")]),t._v(" "),s("h2",{attrs:{id:"conclusion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),s("p",[t._v("Now, the "),s("code",[t._v("render")]),t._v(" phase is complete. The "),s("code",[t._v("fiberRootNode")]),t._v(" in the "),s("code",[t._v("performStncWorkOnRoot")]),t._v(" function is passed to the "),s("code",[t._v("commitRoot")]),t._v(" method and start the "),s("code",[t._v("commit")]),t._v(" ohase workflow.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRoot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);