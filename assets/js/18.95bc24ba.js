(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{490:function(e,t,r){e.exports=r.p+"assets/img/fiber1.3adf5524.png"},646:function(e,t,r){"use strict";r.r(t);var s=r(17),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"foreword"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreword"}},[e._v("#")]),e._v(" Foreword")]),e._v(" "),s("p",[e._v("In this chapter we will explain how "),s("code",[e._v("Fiber node")]),e._v(" are created and "),s("code",[e._v("Fiber tree")]),e._v(" are constructed.")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("render")]),e._v(" phase starts with a call to the "),s("code",[e._v("performSyncWorkOnRoot")]),e._v(" or "),s("code",[e._v("performConcurrentWorkOnRoot")]),e._v(" method. This depends on whether the update is "),s("code",[e._v("synchronous")]),e._v(" or "),s("code",[e._v("asynchronous")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// called by performSyncWorkOnRoot")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("workLoopSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("workInProgress "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!==")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("performUnitOfWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// called by performConcurrentWorkOnRoot")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("workLoopConcurrent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("workInProgress "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!==")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("shouldYield")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("performUnitOfWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("As you can see the only difference between them is whether they call "),s("code",[e._v("shouldYield")]),e._v(". If there is no time left in the current browser frame, "),s("code",[e._v("shouldYield")]),e._v(" will abort the loop until the browser has free time and then continue loop.")]),e._v(" "),s("p",[s("code",[e._v("workInProgress")]),e._v(" represents the currently created "),s("code",[e._v("workInProgress fiber")]),e._v(".")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("performUnitOfWork")]),e._v(" method creates the next "),s("code",[e._v("Fiber node")]),e._v(" and assigns it to "),s("code",[e._v("workInProgress")]),e._v(", and connects "),s("code",[e._v("workInProgress")]),e._v(" to the created "),s("code",[e._v("Fiber node")]),e._v(" to form the "),s("code",[e._v("Fiber tree")]),e._v(".")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/facebook/react/blob/970fa122d8188bafa600e9b5214833487fbf1092/packages/react-reconciler/src/ReactFiberWorkLoop.new.js#L1599",target:"_blank",rel:"noopener noreferrer"}},[e._v("You can check the source code of "),s("code",[e._v("workLoopConcurrent")]),e._v(" here"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("We know that "),s("code",[e._v("Fiber Reconciler")]),e._v(" is refactored from "),s("code",[e._v("Stack Reconciler")]),e._v(" to achieve interruptible recursion by traversal.")]),e._v(" "),s("h2",{attrs:{id:"recursion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recursion"}},[e._v("#")]),e._v(" Recursion")]),e._v(" "),s("p",[e._v("Start with a depth-first traversal down from the "),s("code",[e._v("rootFiber")]),e._v(". The "),s("a",{attrs:{href:"https://github.com/facebook/react/blob/970fa122d8188bafa600e9b5214833487fbf1092/packages/react-reconciler/src/ReactFiberBeginWork.new.js#L3058",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("beginWork method")]),s("OutboundLink")],1),e._v(" is called for each "),s("code",[e._v("Fiber node")]),e._v(" traversed.")]),e._v(" "),s("p",[e._v("This method creates a "),s("code",[e._v("child Fiber node")]),e._v(" based on the incoming "),s("code",[e._v("Fiber node")]),e._v(" and connects the two Fiber nodes.")]),e._v(" "),s("p",[e._v("When the traversal reaches a leaf node (i.e., a component with no children), it enters the next phase.")]),e._v(" "),s("p",[e._v("In the next stage, "),s("a",{attrs:{href:"https://github.com/facebook/react/blob/970fa122d8188bafa600e9b5214833487fbf1092/packages/react-reconciler/src/ReactFiberCompleteWork.new.js#L652",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("completeWork")]),s("OutboundLink")],1),e._v(" is called to process "),s("code",[e._v("Fiber node")]),e._v(".")]),e._v(" "),s("p",[e._v("When a "),s("code",[e._v("Fiber node")]),e._v(" finishes executing "),s("code",[e._v("completeWork")]),e._v(", if it has a "),s("code",[e._v("sibling Fiber node")]),e._v(" (i.e. fiber.sibling ! == null), it enters the first phase of its "),s("code",[e._v("sibling Fiber")]),e._v(".")]),e._v(" "),s("p",[e._v("If no sibling Fiber exists, it enters the second phase of the "),s("code",[e._v("parent Fiber")]),e._v(".")]),e._v(" "),s("p",[e._v("At this point, the render phase is finished.")]),e._v(" "),s("h2",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("I")]),e._v(" am\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("span"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("Harry"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("span"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\nReactDOM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("App "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'root'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("p",[s("img",{attrs:{src:r(490),alt:"Fiber Tree"}})]),e._v(" "),s("p",[e._v("During the "),s("code",[e._v("render")]),e._v(", the exectuion will be like")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('1. rootFiber beginWork\n2. App Fiber beginWork\n3. div Fiber beginWork\n4. "I am" Fiber beginWork\n5. "I am" Fiber completeWork\n6. span Fiber beginWork\n7. span Fiber completeWork\n8. div Fiber completeWork\n9. App Fiber completeWork\n10. rootFiber completeWork\n')])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[e._v('The reason why there is no beginWork/completeWork for "Harry" Fiber is that React handles it specially as a performance optimization for Fiber that has only a single text child node.')])]),s("p",[e._v("We will talk about "),s("code",[e._v("beginWork")]),e._v(" and "),s("code",[e._v("completeWork")]),e._v(" in the following articles.")])])}),[],!1,null,null,null);t.default=n.exports}}]);