(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{630:function(t,s,e){"use strict";e.r(s);var n=e(17),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"foreword"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foreword"}},[t._v("#")]),t._v(" Foreword")]),t._v(" "),e("p",[t._v("In the last section, we have introduced the "),e("code",[t._v("commitRoot")]),t._v(" method is the begining of the "),e("code",[t._v("commit stage")]),t._v(" work. And "),e("code",[t._v("fiberRootNode")]),t._v(" will be the parameter.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRoot")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("An one-way linked list "),e("code",[t._v("effectList")]),t._v(" which needed to excute the side-effect "),e("code",[t._v("Fiber node")]),t._v(" has stored in the "),e("code",[t._v("rootFiber.firstEffect")]),t._v(".")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("DOM")]),t._v(" operations corresponding to these side effects are executed in the "),e("code",[t._v("commit")]),t._v(" phase.")]),t._v(" "),e("p",[t._v("Besdies, some lifecycle hooks, for example "),e("code",[t._v("componentDidXXX")]),t._v(", hook, such as "),e("code",[t._v("useEffect")]),t._v(", need to be executed in the "),e("code",[t._v("commit")]),t._v(" stage.")]),t._v(" "),e("p",[t._v("The main job of the "),e("code",[t._v("commit")]),t._v(" stage, same as the workflow of the "),e("code",[t._v("Renderer")]),t._v(" could be devided into three parts,")]),t._v(" "),e("ul",[e("li",[t._v("before mutation stage, which before the DOM execution.")]),t._v(" "),e("li",[t._v("mutation stage, when the DOM is executing.")]),t._v(" "),e("li",[t._v("layout stage, after the DOM executed.")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberWorkLoop.new.js#L2001",target:"_blank",rel:"noopener noreferrer"}},[t._v("You can check the complete code of the "),e("code",[t._v("commit")]),t._v(" stage"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("There are some extra work before the "),e("code",[t._v("before mutation")]),t._v(" stage and after "),e("code",[t._v("commit")]),t._v(" stage, inclues the trigger of "),e("code",[t._v("useEffect")]),t._v(", reset of the "),e("code",[t._v("priority")]),t._v(" or binding of "),e("code",[t._v("ref")]),t._v(", etc.")]),t._v(" "),e("p",[t._v("For now, these should not be discussed in the "),e("code",[t._v("commit")]),t._v(" section, so we are going to talk about these briefly in this section for the sake of content integrity.")]),t._v(" "),e("h2",{attrs:{id:"before-before-mutation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#before-before-mutation"}},[t._v("#")]),t._v(" before "),e("code",[t._v("before mutation")])]),t._v(" "),e("p",[t._v("From the begining to the first "),e("code",[t._v("if (firstEffect !== null)")]),t._v(" in the "),e("code",[t._v("commitRootImpl")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Triggers the useEffect callback with other synchronized tasks. Since these tasks may trigger new renders, iterate through the execution here until there are no more tasks.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushPassiveEffects")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rootWithPendingPassiveEffects "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// root means fiberRootNode.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// root.finishedWork means the current rootFiber.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" finishedWork "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedWork\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Any variable name with lane is priority related.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lanes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedLanes\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nroot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedWork "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\nroot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedLanes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reset the callback fucntion binding by the Scheduler.")]),t._v("\nroot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\nroot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" remainingLanes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeLanes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" finishedWork"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reset the related variables of priority.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("markRootFinished")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remainingLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Clears completed discrete updates, e.g., updates triggered by user mouse clicks.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rootsWithPendingDiscreteUpdates "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasDiscreteLanes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("remainingLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    rootsWithPendingDiscreteUpdates"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rootsWithPendingDiscreteUpdates"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reset global variables")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" workInProgressRoot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  workInProgressRoot "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  workInProgress "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  workInProgressRootRenderLanes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Assign effectList to firstEffect")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Since each fiber's effectList contains only its children's nodes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// So the root node with effectTag is not included.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// So the root node with effectTag is inserted at the end of the effectList.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This ensures that all fibers with effects are in the effectList.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstEffect\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("effectTag "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" PerformedWork"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    finishedWork"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" finishedWork\n    firstEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" finishedWork"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    firstEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" finishedWork\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// There is no effectTag in the root node.")]),t._v("\n  firstEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" finishedWork"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("As you can see, "),e("code",[t._v("before mutation")]),t._v(", we mainly do some variable assignment and state reset work.")]),t._v(" "),e("p",[t._v("We only need to focus on the last assignment of the "),e("code",[t._v("firstEffect")]),t._v(", which will be used in all three sub-stages of "),e("code",[t._v("commit")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"after-layout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#after-layout"}},[t._v("#")]),t._v(" After layout")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rootDidHavePassiveEffects "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rootDoesHavePassiveEffects\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// useEffect")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rootDoesHavePassiveEffects"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rootDoesHavePassiveEffects "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  rootWithPendingPassiveEffects "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root\n  pendingPassiveEffectsLanes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lanes\n  pendingPassiveEffectsRenderPriority "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" renderPriorityLevel\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// performance optimization")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("remainingLanes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" NoLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enableSchedulerTracing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// performance optimization")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enableSchedulerTracing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("rootDidHavePassiveEffects"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// detection of infinite loop synchronization tasks")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("remainingLanes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" SyncLane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...called before leaving the commitRoot function to trigger a new dispatch and ensure that any additional tasks are dispatched")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensureRootIsScheduled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...handle uncaught errors and legacy boundary issues from older versions")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Execute synchronized tasks so that they don't have to wait until the next event loop")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For example, updates created by executing setState in componentDidMount will be synchronized here")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or useLayoutEffect")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushSyncCallbackQueue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])]),e("p",[e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberWorkLoop.new.js#L2195",target:"_blank",rel:"noopener noreferrer"}},[t._v("You can find the complete code from here"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=a.exports}}]);